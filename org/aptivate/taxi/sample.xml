<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.wfp.rita</groupId>
	<artifactId>rita</artifactId>
	<version>0.4</version>

	<name>RITA</name>
	<description>A World Food Programme project to develop a Relief Item Tracking Application</description>
	<url>http://rita.logscluster.org/</url>
	<inceptionYear>2009</inceptionYear>

	<packaging>war</packaging>

	<build>
		<defaultGoal>install</defaultGoal>
		<directory>${basedir}/target</directory>
		<finalName>${artifactId}</finalName>
		<!--
			we dont want the version to be part of the generated war file name
		-->
		<sourceDirectory>${basedir}/src</sourceDirectory>
		<scriptSourceDirectory>${basedir}/scripts</scriptSourceDirectory>
		<outputDirectory>${basedir}/web/WEB-INF/classes</outputDirectory>

		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>${basedir}/src/</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>${basedir}/conf/</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.sql</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>${basedir}/maven/</directory>
				<includes>
					<include>*.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>${basedir}/</directory>
				<includes>
					<include>pom.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>${basedir}/reports/</directory>
				<includes>
					<include>**/*.jrxml</include>
				</includes>
			</resource>
		</resources>

		<testSourceDirectory>${basedir}/test</testSourceDirectory>
		<testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
		<testResources>
			<testResource>
				<directory>${basedir}/test/</directory>
				<excludes>
					<exclude>**/hibernate/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!-- Create eclipse project: eclipse:eclipse -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<ajdtVersion>none</ajdtVersion>
					</configuration>
				</plugin>

				<!-- Compile: compile -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<testExcludes>
							<testExclude>org/wfp/rita/test/hibernate/*.java</testExclude>
						</testExcludes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<!--
							<argLine>-agentlib:tijmp</argLine>
							<include>org/wfp/rita/test/db/*.java</include>
						-->
						<skipTests>true</skipTests>
						<excludes>
							<exclude>org/wfp/rita/test/hibernate/*.java</exclude>
						</excludes>
					</configuration>
				</plugin>

				<!-- Create build numbers-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<configuration>
						<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
						<items>
							<item>timestamp</item>
						</items>
						<doCheck>true</doCheck>
						<doUpdate>true</doUpdate>
					</configuration>
					<executions>
						<execution>
							<id>insert-build-number-into-manifest</id>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Create war file: package -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<!-- <version>2.0</version> -->

					<configuration>
						<warSourceDirectory>${basedir}/web</warSourceDirectory>

						<webResources>
							<resource>
								<directory>web</directory>
							</resource>
						</webResources>

						<webappDirectory>
							${project.build.directory}/war
						</webappDirectory>

						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>

						<archive>
							<manifestEntries>
								<Implementation-Build>test ${buildNumber}</Implementation-Build>
								<Implementation-Version>${version}</Implementation-Version>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!--
					Create database: mvn exec:java -Dexec.args="-c
					/path/to/database.properties"
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.1</version>
					<executions>
						<execution>
							<goals>
								<goal>java</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>org.wfp.rita.util.DatabaseTool</mainClass>
					</configuration>
				</plugin>

				<!-- Deploy application to tomcat: tomcat:redeploy -->
				<!--
					specify tomcat manager user/password in the ~/.m2/settings.xml file
					and
				-->

				<!--
					enable tomcat manager role for that user in tomcat use
					buildnumber:create tomcat:deploy to deploy the webapp
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<configuration>
						<url>http://localhost:8080/manager</url>
						<server>local</server>
						<path>/${tomcat.appname}</path>
						<!-- added to test in-place deployment -->
						<warSourceDirectory>${basedir}/web</warSourceDirectory>
					</configuration>
				</plugin>

				<!-- jetty plugin, to enable Maven to start jetty for testing -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<configuration>
						<webAppSourceDirectory>${basedir}/web</webAppSourceDirectory>
					</configuration>
				</plugin>

				<!--
					Use "mvn buildnumber:create assembly:assembly" to build an
					executable JAR for the LICs:
					http://maven.apache.org/plugins/maven-assembly-plugin/plugin-info.html
				-->
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<!-- <version>2.2-beta-5</version> -->
					<configuration>
						<!--
							<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						-->
						<descriptors>
							<descriptor>maven/executable-jar.xml</descriptor>
						</descriptors>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<mainClass>org.wfp.rita.util.JettyLoader</mainClass>
							</manifest>
							<manifestEntries>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<Implementation-Version>${version}</Implementation-Version>
							</manifestEntries>
						</archive>
					</configuration>
					<!-- bind it to the packaging phase -->
					<!--
						http://maven.apache.org/plugins/maven-assembly-plugin/usage.html
					-->
					<executions>
						<execution>
							<id>make-assembly</id> <!-- this is used for inheritance merges -->
							<phase>package</phase> <!-- append to the packaging phase. -->
							<goals>
								<goal>single</goal> <!-- goals == mojos -->
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<show>private</show>
					</configuration>
				</plugin>
				
				<!-- 
					Compress project javascripts. for documentation, visit: 
					http://alchim.sourceforge.net/yuicompressor-maven-plugin/compress-mojo.html
					
					Use: mvn net.alchim31.maven:yuicompressor-maven-plugin:compress
					TODO: why it tries to include all property and other text files
				 -->
				<plugin>
			        <groupId>net.alchim31.maven</groupId>
			        <artifactId>yuicompressor-maven-plugin</artifactId>
			        <executions>
			          <execution>
			            <goals>
			              <goal>compress</goal>
			            </goals>
			          </execution>
			        </executions>        
			        <configuration>
				        <resources>
			                <resource>web/*.js</resource>
			            </resources>
				        
			        	<excludes>
			        		<exclude>**/*.properties</exclude>
			        		<exclude>**/*.jrxml</exclude>
			        		<exclude>**/*.xml</exclude>
			        		<exclude>**/*.sql</exclude>
			        		<exclude>**/*min.js</exclude>
			        	</excludes>
			        	<sourceDirectory>web/js</sourceDirectory>
			        	<outputDirectory>web/js/min</outputDirectory>
			        	<webappDirectory>web</webappDirectory>
			        	<suffix>.min</suffix>
			        </configuration>
			      </plugin>
				
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<!--
			http://docs.jboss.org/hibernate/stable/validator/reference/en/html/validator-gettingstarted.html
		-->
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.com/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- JBoss release and snapshot repos for hibernate repositories -->
		<repository>
			<id>jboss-nexus</id>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>

		<repository>
			<id>maven central repo</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>

		<!-- for jsp-api 2.1 -->
		<!--
			http://maven.apache.org/guides/mini/guide-coping-with-sun-jars.html
		-->
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2</url>
			<layout>default</layout>
		</repository>

		<repository>
			<id>org.springframework.security.taglibs.facelets</id>
			<url>http://spring-security-facelets-taglib.googlecode.com/svn/repo/</url>
		</repository>

		<!--
			JAbsorb for dashboard chart data loading: http://jabsorb.org/
			Undocumented maven repository at:
			http://svn.apache.org/repos/asf/tuscany/maven/org/jabsorb/
		-->
		<!--
			<repository> <id>jabsorb</id>
			<url>http://svn.apache.org/repos/asf/tuscany/maven</url>
			</repository>
		-->

		<!--
			Well-known repositories only have JasperReports 3.5.3 at this time,
			which doesn't support Tables which we need for summary reports.
		-->
		<repository>
			<id>jasperreports</id>
			<url>http://jasperreports.sourceforge.net/maven2/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus repository</id>
			<url>https://nexus.codehaus.org/content/repositories/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>

		<!-- Javascript compressor repository -->
		<pluginRepository>
			<name>oss.sonatype.org</name>
			<id>oss.sonatype.org</id>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</pluginRepository>

	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.7.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbytools</artifactId>
			<version>10.7.1.1</version>
			<scope>test</scope>
		</dependency>

		<!--		<dependency>-->
		<!--			<groupId>postgresql</groupId>-->
		<!--			<artifactId>postgresql</artifactId>-->
		<!--			<version>8.4-701.jdbc4</version>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<!--
				version 5.1.11 avoids webapp memory leak:
				http://bugs.mysql.com/bug.php?id=36565
			-->
			<version>5.1.13</version>
		</dependency>

		<dependency>
			<groupId>zxing</groupId>
			<artifactId>zxing13_core</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/zxing/zxing13_core.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>zxing</groupId>
			<artifactId>zxing13_javase</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/zxing/zxing13_javase.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>migrate4j</groupId>
			<artifactId>migrate4j</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/migrate/migrate4j-svn-091117.jar</systemPath>
		</dependency>
		
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/axis.jar</systemPath>
		</dependency>
		
		<dependency>
			<groupId>chartengineapi</groupId>
			<artifactId>chartengineapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/chartengineapi.jar</systemPath>
		</dependency>
		
		<dependency>
			<groupId>chartexamplescoreapi</groupId>
			<artifactId>chartexamplescoreapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/chartexamplescoreapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>chartitemapi</groupId>
			<artifactId>chartitemapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/chartitemapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>com.ibm.icu</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/com.ibm.icu_4.2.1.v20100412.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>commons-cli-1.0</groupId>
			<artifactId>commons-cli-1.0</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/commons-cli-1.0.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>commons-discovery-0.2</groupId>
			<artifactId>commons-discovery-0.2</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/commons-discovery-0.2.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>coreapi</groupId>
			<artifactId>coreapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/coreapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>crosstabcoreapi</groupId>
			<artifactId>crosstabcoreapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/crosstabcoreapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>dataadapterapi</groupId>
			<artifactId>dataadapterapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/dataadapterapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>dataaggregationapi</groupId>
			<artifactId>dataaggregationapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/dataaggregationapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>dataextraction</groupId>
			<artifactId>dataextraction</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/dataextraction.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>dteapi</groupId>
			<artifactId>dteapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/dteapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>emitterconfig</groupId>
			<artifactId>emitterconfig</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/emitterconfig.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>engineapi</groupId>
			<artifactId>engineapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/engineapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>flute</groupId>
			<artifactId>flute</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/flute.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>javax.wsdl</groupId>
			<artifactId>javax.wsdl</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/javax.wsdl_1.5.1.v201005080630.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>jaxrpc</groupId>
			<artifactId>jaxrpc</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/jaxrpc.jar</systemPath>
		</dependency>
		

		<dependency>
			<groupId>js</groupId>
			<artifactId>js</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/js.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>modelapi</groupId>
			<artifactId>modelapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/modelapi.jar</systemPath>
		</dependency>
		
		<dependency>
			<groupId>modelodaapi</groupId>
			<artifactId>modelodaapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/modelodaapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>odadesignapi</groupId>
			<artifactId>odadesignapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/odadesignapi.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.apache.commons.codec</groupId>
			<artifactId>org.apache.commons.codec</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/org.apache.commons.codec_1.3.0.v20100518-1140.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.eclipse.emf.common</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/org.eclipse.emf.common_2.6.0.v20100914-1218.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.eclipse.emf.ecore</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/org.eclipse.emf.ecore_2.6.1.v20100914-1218.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.eclipse.emf.ecore.xmi</groupId>
			<artifactId>org.eclipse.emf.ecore.xmi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/org.eclipse.emf.ecore.xmi_2.5.0.v20100521-1846.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.w3c.css.sac</groupId>
			<artifactId>org.w3c.css.sac</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/org.w3c.css.sac_1.3.0.v200805290154.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>saaj</groupId>
			<artifactId>saaj</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/saaj.jar</systemPath>
		</dependency>
		
		<dependency>
			<groupId>scriptapi</groupId>
			<artifactId>scriptapi</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/scriptapi.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>viewservlets</groupId>
			<artifactId>viewservlets</artifactId>
			<version>LATEST</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/birt-2.5.2/viewservlets.jar</systemPath>
		</dependency>


		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>2.0.4</version>
		</dependency>

		<!--
			We use Spring ORM only for injecting a SessionFactory bean into the
			UniqueValidator and other validators, nothing else! Don't believe
			that you can change the ORM from Hibernate to something else just by
			reconfiguring Spring!
		-->
		<!--
			<dependency> <groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId> <version>2.5</version>
			</dependency>
		-->

		<!--		<dependency>-->
		<!--			<groupId>org.springframework.security</groupId>-->
		<!--			<artifactId>spring-security-taglibs</artifactId>-->
		<!--			<version>2.0.4</version>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>facelets-taglib</artifactId>
			<version>0.2_jsf-2.0_spring-2</version>
			<exclusions>
				<exclusion>
					<groupId>javax.faces</groupId>
					<artifactId>jsf-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>2.0.8</version>
		</dependency>

		<!--
			Embedded Jetty: We need servlet, jsp and el specifications, and an
			expression language implementation
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Jsf specification and implementation: -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.0.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>

		<!--
			Hibernate gives you a choice of bytecode providers between cglib and
			javassist
		-->
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.8.0.GA</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.2</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>compile</scope>
			<version>3.8.2</version>
		</dependency>

		<!--		<dependency>-->
		<!--			<groupId>org.codehaus.xfire</groupId>-->
		<!--			<artifactId>xfire-aegis</artifactId>-->
		<!--			<version>1.2.6</version>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.5.6-Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.5.6-Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>3.5.6-Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
			<exclusions>
				<!--
					NOTE: upgrade to 4.1.0 or above when available, to fix the JAXB bug
					in RpcClientImpl
				-->
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
				<!-- check whether the following is fixed as well -->
				<!-- see http://jira.codehaus.org/browse/JETTY-420 -->
				<exclusion>
					<groupId>javax.activation</groupId>
					<artifactId>activation</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--
			TODO remove exact version dependency for debugging the JAXB bug in
			RpcClientImpl
		-->
		<!-- 2.1.11 and below are broken, 2.1.12 is OK -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1.12</version>
		</dependency>

		<!-- http://community.jboss.org/wiki/EnversFAQ -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>3.5.3-Final</version>
			<exclusions>
				<!--
					Workaround
					http://opensource.atlassian.com/projects/hibernate/browse/HHH-5392
				-->
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.8</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.8</version>
		</dependency>

		
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>7.4.0.v20110414</version>
		</dependency>

	<!--
		jsp support for jetty: http://www.kaigrabfelder.de/en/2009/10/14/jetty_jsp_2_1_maven.html  
		(required to load BIRT reports servlets)
	-->  
		<dependency>  
		    <groupId>org.mortbay.jetty</groupId>  
		    <artifactId>jsp-2.1-glassfish</artifactId>  
		    <version>2.1.v20100127</version>  
		</dependency>  

		<dependency>
			<groupId>org.apache.ws.commons.schema</groupId>
			<artifactId>XmlSchema</artifactId>
			<version>1.4.5</version>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.2</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- TODO: we need to restrict the modules -->

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>2.2.7</version>
			<exclusions>
				<!--
					CXF wants the Geronimo Javamail Spec, but we include the full
					Javamail below anyway, so this is redundant.
				-->
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-javamail_1.4_spec</artifactId>
				</exclusion>
				<!--
					I don't think we need two implementations of Activation or Stax,
					despite what CXF seems to think.
				-->
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-activation_1.1_spec</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-stax-api_1.0_spec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
<!-- 
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>2.2.7</version>
		</dependency>
 -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>2.2.7</version>
			<exclusions>
				<!--
					Ignore Jetty 6.1.21 pulled in by CXF, as we want a more recent
					version for our own nefarious purposes.
				-->
				<exclusion>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-http</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-servlet_2.5_spec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--
			<dependency> <groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-databinding-aegis</artifactId>
			<version>2.2.7</version> </dependency>
		-->

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-tools-java2ws</artifactId>
			<scope>compile</scope>
			<version>2.2.7</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
				<!-- still don't need another implementation of stax -->
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-stax-api_1.0_spec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--
			Add javax.mail implementation, as embedded jetty doesn't include any
		-->
		<dependency>
			<groupId>org.apache.geronimo.javamail</groupId>
			<artifactId>geronimo-javamail_1.4_mail</artifactId>
			<version>1.7</version>
		</dependency>

		<!--  for unit testing including rhino/JS -->
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.8</version>
			<scope>test</scope>
		</dependency>

		<!--
			JAbsorb for dashboard chart data loading: http://jabsorb.org/
			Undocumented maven repository at:
			http://svn.apache.org/repos/asf/tuscany/maven/org/jabsorb/
		-->
		<!--
			<dependency> <groupId>org.jabsorb</groupId>
			<artifactId>jabsorb</artifactId> <version>1.3.1</version>
			</dependency>
		-->

		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>3.7.2</version>
		</dependency>

		<!--
			Although dependency:tree shows commons-collections version 3.2
			required by spring-security-core, eclipse:eclipse actually includes
			version 2.1 for some bizarre reason, which is too old for Hibernate
			and breaks it. Explicitly requiring version 3.2.1 works around that.
		-->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>

		<!--
			Groovy with embedded jarjar dependencies, required to compile Jasper
			reports from XML.
		-->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.7.5</version>
		</dependency>

		<!--
			Apache POI is required to general Excel spreadsheets from Jasper
			Reports.
		-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.6</version>
		</dependency>
		
		<!--
			TODO: This library is only needed because the executable servlet includes the 
			jasper implementation of tomcat that will need this jar 
		-->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>7.0.5</version>
		</dependency>
		
	</dependencies>

	<organization>
		<name>WFP</name>
		<url>http://www.wfp.org</url>
	</organization>

	<developers>
		<developer>
			<id>aaron</id>
			<name>Aaron Holmes</name>
			<email>Aaron.Holmes@wfp.org</email>
		</developer>
		<developer>
			<id>robert</id>
			<name>Robert Kiraly</name>
			<email>rkiraly@wfp.org</email>
		</developer>
		<developer>
			<id>chris</id>
			<name>Chris Wilson</name>
			<email>chris+rita@aptivate.org</email>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The GNU General Public License, Version 2</name>
			<url>http://www.gnu.org/licenses/gpl-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<!--
		<scm>
		<connection>scm:svn:https://trackrita.svn.sourceforge.net/svnroot/trackrita</connection>
		<developerConnection>scm:svn:https://trackrita.svn.sourceforge.net/svnroot/trackrita</developerConnection>
		<tag>HEAD</tag>
		<url>https://sourceforge.net/apps/trac/trackrita/browser/rita</url>
		</scm>
	-->
	<scm>
		<connection>scm:svn:http://rita.logscluster.org/svn/rita</connection>
		<developerConnection>scm:svn:https://rita.logscluster.org/svn/rita</developerConnection>
		<tag>HEAD</tag>
		<url>http://rita.logscluster.org/browser/rita</url>
	</scm>

	<dependencyManagement>
		<dependencies>
		</dependencies>
	</dependencyManagement>

	<issueManagement>
		<system>Trac</system>
		<url>http://rita.logscluster.org/report/1</url>
	</issueManagement>

	<ciManagement>
		<system>Hudson</system>
		<url>http://rita.logscluster.org/hudson/</url>
	</ciManagement>

	<distributionManagement>
		<downloadUrl>http://rita.logscluster.org/maven</downloadUrl>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>rita_logscluster_org</id>
			<name>RITA Maven Repository</name>
			<url>file:///data/rita/htdocs/repo</url>
			<layout>default</layout>
		</repository>
		<site>
			<id>rita_logscluster_org</id>
			<name>RITA Maven Project Site</name>
			<url>file:///data/rita/htdocs/site</url>
		</site>
	</distributionManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<!-- execute JETTY with mvn -Pstandalone -->
		<!--
			http://www.vineetmanohar.com/2009/11/3-ways-to-run-java-main-from-maven/
		-->
		<profile>
			<id>standalone</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>org.wfp.rita.util.JettyLoader</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
